
==================== FINAL INTERFACE ====================
2017-02-05 17:35:08.784650434 UTC

interface assign2-0.1.0.0-HR9hU8cIXLf43tgzC2vdOI:Token 8001
  interface hash: a2b7626e7c0e43ce2c98df71f0e5d906
  ABI hash: e897ad80613966aa5abd8d1469d9012c
  export-list hash: 5cfdc964f38b953af54dd1f54cfaa251
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 3eae81af6af509d189de115e6caf048f
  sig of: Nothing
  used TH splices: False
  where
exports:
  Token.Token{Token.TADD Token.TDIV Token.TDO Token.TDONE Token.TELSE Token.TENDIF Token.TEQUALS Token.TFLOAT Token.TIF Token.TINT Token.TMULT Token.TPRINT Token.TREAD Token.TSTRING Token.TSUB Token.TTHEN Token.TVAR Token.TWHILE Token.T_CBRACE Token.T_COLON Token.T_CPAREN Token.T_DQUOTE Token.T_FLOAT_VAL Token.T_ID_VAL Token.T_INT_VAL Token.T_OBRACE Token.T_OPAREN Token.T_SCOLON Token.T_STRING_VAL}
module dependencies:
package dependencies: base-4.9.0.0* ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
family instance modules: base-4.9.0.0:Control.Applicative
                         base-4.9.0.0:Data.Either base-4.9.0.0:Data.Functor.Const
                         base-4.9.0.0:Data.Monoid base-4.9.0.0:Data.Type.Equality
                         base-4.9.0.0:GHC.Generics base-4.9.0.0:GHC.IO.Exception
                         base-4.9.0.0:GHC.TypeLits
import  -/  base-4.9.0.0:GHC.Base 8ed3be81c0707b322f975a84ae1bb816
import  -/  base-4.9.0.0:GHC.Show 952347a6ab730bcb25c0854d8bc6ca51
import  -/  base-4.9.0.0:Prelude b9bddb97799837fe67a8d00939a5b6c3
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  integer-gmp-1.0.0.1:GHC.Integer.Type 62c0e736506aac47ef40569f5b82e19d
71e1b87689efd694bd8275cfc62f5b27
  $fEqToken :: GHC.Classes.Eq Token.Token
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Token.Token Token.$fEqToken_$c== Token.$fEqToken_$c/= -}
71e1b87689efd694bd8275cfc62f5b27
  $fEqToken_$c/= :: Token.Token -> Token.Token -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Token.Token) (b :: Token.Token) ->
                 case Token.$fEqToken_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
71e1b87689efd694bd8275cfc62f5b27
  $fEqToken_$c== :: Token.Token -> Token.Token -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (ds :: Token.Token) (ds1 :: Token.Token) ->
                 case ds of wild {
                   DEFAULT
                   -> GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.==#
                           (GHC.Prim.dataToTag# @ Token.Token wild)
                           (GHC.Prim.dataToTag# @ Token.Token ds1))
                   Token.T_ID_VAL a1
                   -> case ds1 of wild1 {
                        DEFAULT
                        -> case GHC.Prim.dataToTag# @ Token.Token wild1 of wild2 {
                             DEFAULT -> GHC.Types.False 25# -> GHC.Types.True }
                        Token.T_ID_VAL b1 -> GHC.Base.eqString a1 b1 }
                   Token.T_INT_VAL a1
                   -> case ds1 of wild1 {
                        DEFAULT
                        -> case GHC.Prim.dataToTag# @ Token.Token wild1 of wild2 {
                             DEFAULT -> GHC.Types.False 26# -> GHC.Types.True }
                        Token.T_INT_VAL b1 -> GHC.Integer.Type.eqInteger a1 b1 }
                   Token.T_FLOAT_VAL a1
                   -> case ds1 of wild1 {
                        DEFAULT
                        -> case GHC.Prim.dataToTag# @ Token.Token wild1 of wild2 {
                             DEFAULT -> GHC.Types.False 27# -> GHC.Types.True }
                        Token.T_FLOAT_VAL b1 -> GHC.Classes.eqDouble a1 b1 }
                   Token.T_STRING_VAL a1
                   -> case ds1 of wild1 {
                        DEFAULT
                        -> case GHC.Prim.dataToTag# @ Token.Token wild1 of wild2 {
                             DEFAULT -> GHC.Types.False 28# -> GHC.Types.True }
                        Token.T_STRING_VAL b1 -> GHC.Base.eqString a1 b1 } }) -}
71e1b87689efd694bd8275cfc62f5b27
  $fShowToken :: GHC.Show.Show Token.Token
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Token.Token
                  Token.$fShowToken_$cshowsPrec
                  Token.$fShowToken_$cshow
                  Token.$fShowToken_$cshowList -}
71e1b87689efd694bd8275cfc62f5b27
  $fShowToken1 :: Token.Token -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (Token.$fShowToken_$cshowsPrec Token.$fShowToken2) -}
e12a7049120b21e615536150aed47fc6
  $fShowToken10 :: GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (GHC.Base.++ @ GHC.Types.Char Token.$fShowToken11) -}
0573ec3c559ceb9293929ac831c7c1ba
  $fShowToken11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "T_SCOLON"#) -}
17907d6236f10a77562a2577ef43754e
  $fShowToken12 :: GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (GHC.Base.++ @ GHC.Types.Char Token.$fShowToken13) -}
d4181b72cb96af64f24c16c2177f85ff
  $fShowToken13 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "T_DQUOTE"#) -}
1137f895c5103337799515a7728f61d8
  $fShowToken14 :: GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (GHC.Base.++ @ GHC.Types.Char Token.$fShowToken15) -}
610fc0eb13ff02ffb52f111c76880188
  $fShowToken15 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "T_CBRACE"#) -}
7b1abb86eea74270767460ee3d2b43ae
  $fShowToken16 :: GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (GHC.Base.++ @ GHC.Types.Char Token.$fShowToken17) -}
b7fa5dd22955d75dcca949e6e55ac0d9
  $fShowToken17 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "T_OBRACE"#) -}
aaebb34b4d0604a35431b23f012a5e96
  $fShowToken18 :: GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (GHC.Base.++ @ GHC.Types.Char Token.$fShowToken19) -}
5e7246adc0a9bea3837d1b2c07c470c6
  $fShowToken19 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "T_CPAREN"#) -}
91a081cf7a26a50838b2d2c3b8a82851
  $fShowToken2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
54bcb407db6c53ff62e47fd46431c604
  $fShowToken20 :: GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (GHC.Base.++ @ GHC.Types.Char Token.$fShowToken21) -}
07996df5c430e7e1b0bce5a0772eb2f2
  $fShowToken21 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "T_OPAREN"#) -}
9b2228cd109fc91e2cf22f90a349eaef
  $fShowToken22 :: GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (GHC.Base.++ @ GHC.Types.Char Token.$fShowToken23) -}
3bcd9c5f2a2d8f72881d78582a8ccacf
  $fShowToken23 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "TEQUALS"#) -}
188304d7fd6aaf52ce17bbfec857a134
  $fShowToken24 :: GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (GHC.Base.++ @ GHC.Types.Char Token.$fShowToken25) -}
c174abc21ca8bd7dba90c1750b5dbace
  $fShowToken25 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "TDIV"#) -}
a2278cda34dadd84d998ba85a6443060
  $fShowToken26 :: GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (GHC.Base.++ @ GHC.Types.Char Token.$fShowToken27) -}
e8058129d1b66a7eba4d9a242af19a56
  $fShowToken27 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "TMULT"#) -}
c333ad28b0affc799b75b071cd9b7948
  $fShowToken28 :: GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (GHC.Base.++ @ GHC.Types.Char Token.$fShowToken29) -}
10b18b4b12197462fb7d6cf6865536d8
  $fShowToken29 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "TSUB"#) -}
e94f1a7e569940ffef25fbcd4efdaaa2
  $fShowToken3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "T_STRING_VAL "#) -}
f44888cee184ef9fd198e4faec86a6dc
  $fShowToken30 :: GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (GHC.Base.++ @ GHC.Types.Char Token.$fShowToken31) -}
bdce5647e97ddb683a627974b9f04f33
  $fShowToken31 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "TADD"#) -}
0b980e4d8dc4ec2a972401270397ba76
  $fShowToken32 :: GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (GHC.Base.++ @ GHC.Types.Char Token.$fShowToken33) -}
80f2c9bc81cd282360bb7d49d8c9743f
  $fShowToken33 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "TENDIF"#) -}
49e7e545e3f4baf5a79708d7914a057e
  $fShowToken34 :: GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (GHC.Base.++ @ GHC.Types.Char Token.$fShowToken35) -}
06e7a0556349d5f94e0288a098694ab9
  $fShowToken35 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "TTHEN"#) -}
f6e582545090eb1fe49e9bb474921db8
  $fShowToken36 :: GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (GHC.Base.++ @ GHC.Types.Char Token.$fShowToken37) -}
aa18194910b9284470fe35b488d75131
  $fShowToken37 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "TELSE"#) -}
031348cbd2fb036ae7f20889ed9f2a77
  $fShowToken38 :: GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (GHC.Base.++ @ GHC.Types.Char Token.$fShowToken39) -}
f9b5cfe97272a6cb17a4f6ff10cea630
  $fShowToken39 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "TIF"#) -}
7930125f6b4be849c98f466c4ce767e0
  $fShowToken4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "T_FLOAT_VAL "#) -}
328cce99d97373c669f4f84470542521
  $fShowToken40 :: GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (GHC.Base.++ @ GHC.Types.Char Token.$fShowToken41) -}
dd1a02c7df7f2015a54db2240f8dc65e
  $fShowToken41 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "TSTRING"#) -}
9ad9efa4c70552f03e2f280042c12358
  $fShowToken42 :: GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (GHC.Base.++ @ GHC.Types.Char Token.$fShowToken43) -}
dd6f0a9c7082772c0857ccfdeefee4f5
  $fShowToken43 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "TREAD"#) -}
d9ba37c3f24533088567735a64555f8e
  $fShowToken44 :: GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (GHC.Base.++ @ GHC.Types.Char Token.$fShowToken45) -}
4fe593db333ab080426a3c5d462e140b
  $fShowToken45 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "TPRINT"#) -}
1de82ad8037b8c27775780e3fd0c6517
  $fShowToken46 :: GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (GHC.Base.++ @ GHC.Types.Char Token.$fShowToken47) -}
55ba368c02def6ed5060d4b954ccffe3
  $fShowToken47 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "TINT"#) -}
77f9e565ac7c32345f50aa6c80f9009f
  $fShowToken48 :: GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (GHC.Base.++ @ GHC.Types.Char Token.$fShowToken49) -}
c43f5bbc92d33f7be4e9be577a38cbe1
  $fShowToken49 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "TFLOAT"#) -}
3631f53fef5aad701d29adbb5de95eca
  $fShowToken5 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 11#) -}
f56eba9743f99aff51401de89f9da31b
  $fShowToken50 :: GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (GHC.Base.++ @ GHC.Types.Char Token.$fShowToken51) -}
a308e07669f5c095104082d345a5de0b
  $fShowToken51 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "TDONE"#) -}
3618adeaddce26d14b0f3250a052cfc6
  $fShowToken52 :: GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (GHC.Base.++ @ GHC.Types.Char Token.$fShowToken53) -}
7dfce5aa817998dbbefbb1eaf32441f0
  $fShowToken53 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "TDO"#) -}
29d634024bbaa091d68ef42668f2b248
  $fShowToken54 :: GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (GHC.Base.++ @ GHC.Types.Char Token.$fShowToken55) -}
23241bede87893d139422e59691d1f6d
  $fShowToken55 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "TWHILE"#) -}
8ee4456a8ff9d60d466de9ea67b81288
  $fShowToken56 :: GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (GHC.Base.++ @ GHC.Types.Char Token.$fShowToken57) -}
0190a159ebb0b1cd1f5d6a173291919d
  $fShowToken57 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "TVAR"#) -}
00ab5dd50b5538d236e9b9d65c566f82
  $fShowToken58 :: [GHC.Types.Char]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   GHC.Show.shows8
                   (GHC.Types.[] @ GHC.Types.Char)) -}
1eaf62f094b0e1bd20f77fea146355d0
  $fShowToken6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "T_INT_VAL "#) -}
56c53cf2d4ccbcf54870fe254efa7e73
  $fShowToken7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "T_ID_VAL "#) -}
d2d8da559f6c61e099273066f9a67fad
  $fShowToken8 :: GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (GHC.Base.++ @ GHC.Types.Char Token.$fShowToken9) -}
087592c7537f4366c353f6f4cbcee25a
  $fShowToken9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "T_COLON"#) -}
71e1b87689efd694bd8275cfc62f5b27
  $fShowToken_$cshow :: Token.Token -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (x :: Token.Token) ->
                 case x of wild {
                   Token.TVAR -> Token.$fShowToken57
                   Token.TWHILE -> Token.$fShowToken55
                   Token.TDO -> Token.$fShowToken53
                   Token.TDONE -> Token.$fShowToken51
                   Token.TFLOAT -> Token.$fShowToken49
                   Token.TINT -> Token.$fShowToken47
                   Token.TPRINT -> Token.$fShowToken45
                   Token.TREAD -> Token.$fShowToken43
                   Token.TSTRING -> Token.$fShowToken41
                   Token.TIF -> Token.$fShowToken39
                   Token.TELSE -> Token.$fShowToken37
                   Token.TTHEN -> Token.$fShowToken35
                   Token.TENDIF -> Token.$fShowToken33
                   Token.TADD -> Token.$fShowToken31
                   Token.TSUB -> Token.$fShowToken29
                   Token.TMULT -> Token.$fShowToken27
                   Token.TDIV -> Token.$fShowToken25
                   Token.TEQUALS -> Token.$fShowToken23
                   Token.T_OPAREN -> Token.$fShowToken21
                   Token.T_CPAREN -> Token.$fShowToken19
                   Token.T_OBRACE -> Token.$fShowToken17
                   Token.T_CBRACE -> Token.$fShowToken15
                   Token.T_DQUOTE -> Token.$fShowToken13
                   Token.T_SCOLON -> Token.$fShowToken11
                   Token.T_COLON -> Token.$fShowToken9
                   Token.T_ID_VAL b1
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Token.$fShowToken7
                        (GHC.Types.:
                           @ GHC.Types.Char
                           GHC.Show.shows8
                           (GHC.Show.showLitString b1 Token.$fShowToken58))
                   Token.T_INT_VAL b1
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Token.$fShowToken6
                        (case GHC.Show.$w$cshowsPrec3
                                11#
                                b1
                                (GHC.Types.[] @ GHC.Types.Char) of ww2 { (#,#) ww3 ww4 ->
                         GHC.Types.: @ GHC.Types.Char ww3 ww4 })
                   Token.T_FLOAT_VAL b1
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Token.$fShowToken4
                        (case b1 of ww { GHC.Types.D# ww1 ->
                         GHC.Float.$w$sshowSignedFloat
                           GHC.Float.$fShowDouble_$sshowFloat
                           Token.$fShowToken5
                           ww1
                           (GHC.Types.[] @ GHC.Types.Char) })
                   Token.T_STRING_VAL b1
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Token.$fShowToken3
                        (GHC.Types.:
                           @ GHC.Types.Char
                           GHC.Show.shows8
                           (GHC.Show.showLitString b1 Token.$fShowToken58)) }) -}
71e1b87689efd694bd8275cfc62f5b27
  $fShowToken_$cshowList :: [Token.Token] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Token.Token
                   Token.$fShowToken1) -}
71e1b87689efd694bd8275cfc62f5b27
  $fShowToken_$cshowsPrec ::
    GHC.Types.Int -> Token.Token -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <L,1*U(U)><S,1*U>,
     Unfolding: (\ (ds :: GHC.Types.Int) (ds1 :: Token.Token) ->
                 case ds1 of wild {
                   Token.TVAR -> Token.$fShowToken56
                   Token.TWHILE -> Token.$fShowToken54
                   Token.TDO -> Token.$fShowToken52
                   Token.TDONE -> Token.$fShowToken50
                   Token.TFLOAT -> Token.$fShowToken48
                   Token.TINT -> Token.$fShowToken46
                   Token.TPRINT -> Token.$fShowToken44
                   Token.TREAD -> Token.$fShowToken42
                   Token.TSTRING -> Token.$fShowToken40
                   Token.TIF -> Token.$fShowToken38
                   Token.TELSE -> Token.$fShowToken36
                   Token.TTHEN -> Token.$fShowToken34
                   Token.TENDIF -> Token.$fShowToken32
                   Token.TADD -> Token.$fShowToken30
                   Token.TSUB -> Token.$fShowToken28
                   Token.TMULT -> Token.$fShowToken26
                   Token.TDIV -> Token.$fShowToken24
                   Token.TEQUALS -> Token.$fShowToken22
                   Token.T_OPAREN -> Token.$fShowToken20
                   Token.T_CPAREN -> Token.$fShowToken18
                   Token.T_OBRACE -> Token.$fShowToken16
                   Token.T_CBRACE -> Token.$fShowToken14
                   Token.T_DQUOTE -> Token.$fShowToken12
                   Token.T_SCOLON -> Token.$fShowToken10
                   Token.T_COLON -> Token.$fShowToken8
                   Token.T_ID_VAL b1
                   -> case ds of wild1 { GHC.Types.I# x ->
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# x 11#) of wild2 {
                        GHC.Types.False
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.Base.++
                             @ GHC.Types.Char
                             Token.$fShowToken7
                             (GHC.Types.:
                                @ GHC.Types.Char
                                GHC.Show.shows8
                                (GHC.Show.showLitString
                                   b1
                                   (GHC.Types.: @ GHC.Types.Char GHC.Show.shows8 x1)))
                        GHC.Types.True
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows9
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Token.$fShowToken7
                                (GHC.Types.:
                                   @ GHC.Types.Char
                                   GHC.Show.shows8
                                   (GHC.Show.showLitString
                                      b1
                                      (GHC.Types.:
                                         @ GHC.Types.Char
                                         GHC.Show.shows8
                                         (GHC.Types.: @ GHC.Types.Char GHC.Show.shows6 x1))))) } }
                   Token.T_INT_VAL b1
                   -> case ds of wild1 { GHC.Types.I# x ->
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# x 11#) of wild2 {
                        GHC.Types.False
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.Base.++
                             @ GHC.Types.Char
                             Token.$fShowToken6
                             (case GHC.Show.$w$cshowsPrec3 11# b1 x1 of ww2 { (#,#) ww3 ww4 ->
                              GHC.Types.: @ GHC.Types.Char ww3 ww4 })
                        GHC.Types.True
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows9
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Token.$fShowToken6
                                (case GHC.Show.$w$cshowsPrec3
                                        11#
                                        b1
                                        (GHC.Types.:
                                           @ GHC.Types.Char
                                           GHC.Show.shows6
                                           x1) of ww2 { (#,#) ww3 ww4 ->
                                 GHC.Types.: @ GHC.Types.Char ww3 ww4 })) } }
                   Token.T_FLOAT_VAL b1
                   -> case ds of wild1 { GHC.Types.I# x ->
                      let {
                        g :: GHC.Base.String -> GHC.Base.String
                        = case b1 of ww { GHC.Types.D# ww1 ->
                          GHC.Float.$w$sshowSignedFloat
                            GHC.Float.$fShowDouble_$sshowFloat
                            Token.$fShowToken5
                            ww1 }
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# x 11#) of wild2 {
                        GHC.Types.False
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.Base.++ @ GHC.Types.Char Token.$fShowToken4 (g x1)
                        GHC.Types.True
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows9
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Token.$fShowToken4
                                (g (GHC.Types.: @ GHC.Types.Char GHC.Show.shows6 x1))) } }
                   Token.T_STRING_VAL b1
                   -> case ds of wild1 { GHC.Types.I# x ->
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# x 11#) of wild2 {
                        GHC.Types.False
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.Base.++
                             @ GHC.Types.Char
                             Token.$fShowToken3
                             (GHC.Types.:
                                @ GHC.Types.Char
                                GHC.Show.shows8
                                (GHC.Show.showLitString
                                   b1
                                   (GHC.Types.: @ GHC.Types.Char GHC.Show.shows8 x1)))
                        GHC.Types.True
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows9
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Token.$fShowToken3
                                (GHC.Types.:
                                   @ GHC.Types.Char
                                   GHC.Show.shows8
                                   (GHC.Show.showLitString
                                      b1
                                      (GHC.Types.:
                                         @ GHC.Types.Char
                                         GHC.Show.shows8
                                         (GHC.Types.:
                                            @ GHC.Types.Char
                                            GHC.Show.shows6
                                            x1))))) } } }) -}
f89f2c52248e61f81e7b4ac92bba80b7
  $tc'TADD :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13182366331546871048##
                   14256003851567201606##
                   Token.$trModule
                   Token.$tc'TADD1) -}
64b32978bc1c5a5768d1a5e27a0e47ee
  $tc'TADD1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'TADD"#) -}
9a5a599a6ac038f47652b08bded431ba
  $tc'TDIV :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2959681501004192372##
                   13403323019487651010##
                   Token.$trModule
                   Token.$tc'TDIV1) -}
dbb80b33d5d46f2821c990f90c954a33
  $tc'TDIV1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'TDIV"#) -}
255e947052f30787d29462f9f6150d45
  $tc'TDO :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15022552269747712286##
                   17144573096738203331##
                   Token.$trModule
                   Token.$tc'TDO1) -}
c7b4a1c7eec58adcadf3a0a30f355c80
  $tc'TDO1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'TDO"#) -}
6fd823ac6b134d2b023f320416d2501f
  $tc'TDONE :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12067147459624151354##
                   11749541716386576120##
                   Token.$trModule
                   Token.$tc'TDONE1) -}
0c0331e67c6e2b8d372eb9a0ad829173
  $tc'TDONE1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'TDONE"#) -}
2261f86e922b1bcc23d0397e0440169b
  $tc'TELSE :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10091278526966085236##
                   5590677794103510424##
                   Token.$trModule
                   Token.$tc'TELSE1) -}
eff206354f6dbc6ef506f112b4855844
  $tc'TELSE1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'TELSE"#) -}
f61db75bee0362d7e4f7e3657e1437c7
  $tc'TENDIF :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9348557867420392577##
                   2425434593656018991##
                   Token.$trModule
                   Token.$tc'TENDIF1) -}
92c5418cd1fcf1b1d1a6d3b8c0761d78
  $tc'TENDIF1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'TENDIF"#) -}
666cbb4638d66dd3a5f5bb5d4427c30f
  $tc'TEQUALS :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1087267214341062610##
                   10031829889020911390##
                   Token.$trModule
                   Token.$tc'TEQUALS1) -}
90a221011e6e7ea3b9d20b7c69a97d78
  $tc'TEQUALS1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'TEQUALS"#) -}
468e62a8774a221c86706a89673e44b1
  $tc'TFLOAT :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14450447619162038114##
                   4310588912311836017##
                   Token.$trModule
                   Token.$tc'TFLOAT1) -}
937be965f2d88a636b05423ad88a537f
  $tc'TFLOAT1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'TFLOAT"#) -}
3e35bd1b1419f1f89b70d281e72aa2f1
  $tc'TIF :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11335279059721508805##
                   18311440137070383143##
                   Token.$trModule
                   Token.$tc'TIF1) -}
003f8f4b13c5187c363669f4014100fc
  $tc'TIF1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'TIF"#) -}
d39ef3cfd36a34a9c48fcae552bbf639
  $tc'TINT :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6449067902923549340##
                   8088108348553936614##
                   Token.$trModule
                   Token.$tc'TINT1) -}
23851cac3672adf633d349ce5baf7d57
  $tc'TINT1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'TINT"#) -}
b4e5b5bdcccb949502d1dab63f475c03
  $tc'TMULT :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16289733535556549357##
                   5966395725689824571##
                   Token.$trModule
                   Token.$tc'TMULT1) -}
a5544195408e53d982248e57de1d848a
  $tc'TMULT1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'TMULT"#) -}
334c77ae0a36f6e141f201e2c0a25bc1
  $tc'TPRINT :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10651377311115575232##
                   5737280691445582987##
                   Token.$trModule
                   Token.$tc'TPRINT1) -}
df626d301a22f5f1bdc992f398468420
  $tc'TPRINT1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'TPRINT"#) -}
f50a892140696c259d45d238ff69ed2e
  $tc'TREAD :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1672883551290066602##
                   5490703056563952767##
                   Token.$trModule
                   Token.$tc'TREAD1) -}
08c31f859242595f35a15cd965647117
  $tc'TREAD1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'TREAD"#) -}
7a087151c110da28468385a643ebc087
  $tc'TSTRING :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8656287874282554497##
                   4637340627658849809##
                   Token.$trModule
                   Token.$tc'TSTRING1) -}
3b9a64ffbd79209ed5c627ce7b855422
  $tc'TSTRING1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'TSTRING"#) -}
28b783a0b9afd3c3f5de684dc83c854f
  $tc'TSUB :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15268989280385044311##
                   2574470954770387695##
                   Token.$trModule
                   Token.$tc'TSUB1) -}
28db2e16499176b05e2ef270fc59545b
  $tc'TSUB1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'TSUB"#) -}
94a353d7994518c94d93a1a8a9969608
  $tc'TTHEN :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12258595282198657701##
                   14190138792801348360##
                   Token.$trModule
                   Token.$tc'TTHEN1) -}
6bffc01a9c3d8180f4b6fafa330b2282
  $tc'TTHEN1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'TTHEN"#) -}
dec7961733b5f6f8e09a9eab9489b4ed
  $tc'TVAR :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7054030520088916703##
                   17655025543351730813##
                   Token.$trModule
                   Token.$tc'TVAR1) -}
1f4956cbe09b6f79f8689d6510cb6015
  $tc'TVAR1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'TVAR"#) -}
4dea7b7f365a0d1d063c52c5fe6db3db
  $tc'TWHILE :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1915301598128655812##
                   15122360823222949862##
                   Token.$trModule
                   Token.$tc'TWHILE1) -}
393523dd86250fbd5333eb2a8244d913
  $tc'TWHILE1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'TWHILE"#) -}
cae62175c956aab2707bd85c2c47efa5
  $tc'T_CBRACE :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7628122300835200559##
                   16623710142799070422##
                   Token.$trModule
                   Token.$tc'T_CBRACE1) -}
7ee435882c8c63699ba4360fe6248fbd
  $tc'T_CBRACE1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'T_CBRACE"#) -}
f70ae3ee46bbcb048a322e89f81a37b4
  $tc'T_COLON :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8200215714165275475##
                   1237988499947060819##
                   Token.$trModule
                   Token.$tc'T_COLON1) -}
87b4d25b2ae90c46e440e5732f1f1636
  $tc'T_COLON1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'T_COLON"#) -}
b67640f5002b304963415c67b40b097d
  $tc'T_CPAREN :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6393396053849124153##
                   3243212763020485641##
                   Token.$trModule
                   Token.$tc'T_CPAREN1) -}
82e9fb679bd35e6e1cc47e830296d5a3
  $tc'T_CPAREN1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'T_CPAREN"#) -}
67ab85debb7ea58254620d3ab0ac7236
  $tc'T_DQUOTE :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   852362626496514965##
                   702192186557055945##
                   Token.$trModule
                   Token.$tc'T_DQUOTE1) -}
9cd3bb60682c3bf92c5288371dd594d7
  $tc'T_DQUOTE1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'T_DQUOTE"#) -}
71ce59a9421fe604da08d7f17145481d
  $tc'T_FLOAT_VAL :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3125667357690968988##
                   14353013721119879880##
                   Token.$trModule
                   Token.$tc'T_FLOAT_VAL1) -}
8bef6ad7a4aff571dc3a2b23863a582c
  $tc'T_FLOAT_VAL1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'T_FLOAT_VAL"#) -}
ac04455796f99bc714b176cce1ba00fb
  $tc'T_ID_VAL :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16137852880578550914##
                   18443595223563328124##
                   Token.$trModule
                   Token.$tc'T_ID_VAL1) -}
03bcaafdc455770d9976106eec4ae205
  $tc'T_ID_VAL1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'T_ID_VAL"#) -}
e53e8fec1194e65ff733d2939425248b
  $tc'T_INT_VAL :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6121952614080590112##
                   5762514187781523861##
                   Token.$trModule
                   Token.$tc'T_INT_VAL1) -}
f29f6622d62cef3bb217ab06c61fe1d9
  $tc'T_INT_VAL1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'T_INT_VAL"#) -}
f0599d4eb8ea71635155e307e6abf00e
  $tc'T_OBRACE :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1408687218644286582##
                   2453705966819086029##
                   Token.$trModule
                   Token.$tc'T_OBRACE1) -}
49f465177ec1c5026429267b605618d9
  $tc'T_OBRACE1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'T_OBRACE"#) -}
686a5fce0a1caed97722c12041d3420c
  $tc'T_OPAREN :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11964608305110083324##
                   7070427314388676620##
                   Token.$trModule
                   Token.$tc'T_OPAREN1) -}
c318e05c4c5f03eab581abf6cfe2299b
  $tc'T_OPAREN1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'T_OPAREN"#) -}
38065fd36153bdabbb3d14b874c9ffa3
  $tc'T_SCOLON :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8534154156602555978##
                   18204335631775031860##
                   Token.$trModule
                   Token.$tc'T_SCOLON1) -}
12666867a72f4eb854391e31f59f6c93
  $tc'T_SCOLON1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'T_SCOLON"#) -}
b020f9586f7d3c69f6f6168e0282c9a1
  $tc'T_STRING_VAL :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12850159687674337113##
                   12647003792754348916##
                   Token.$trModule
                   Token.$tc'T_STRING_VAL1) -}
fae762cd68e447ef652587722754d62e
  $tc'T_STRING_VAL1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'T_STRING_VAL"#) -}
b3e2436bb58b6315d1d45fab7cc89e1f
  $tcToken :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2360773411656262729##
                   6508813529156548600##
                   Token.$trModule
                   Token.$trModule1) -}
dddbd85597f40314f2eefa35f6d1800a
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Token.$trModule2 Token.$trModule1) -}
638eef6f8854fcb70972107589e2037c
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Token"#) -}
f1a1596bbd5331db147d11bca251595c
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "assign2-0.1.0.0-HR9hU8cIXLf43tgzC2vdOI"#) -}
71e1b87689efd694bd8275cfc62f5b27
  data Token
    = TVAR
    | TWHILE
    | TDO
    | TDONE
    | TFLOAT
    | TINT
    | TPRINT
    | TREAD
    | TSTRING
    | TIF
    | TELSE
    | TTHEN
    | TENDIF
    | TADD
    | TSUB
    | TMULT
    | TDIV
    | TEQUALS
    | T_OPAREN
    | T_CPAREN
    | T_OBRACE
    | T_CBRACE
    | T_DQUOTE
    | T_SCOLON
    | T_COLON
    | T_ID_VAL GHC.Base.String
    | T_INT_VAL GHC.Integer.Type.Integer
    | T_FLOAT_VAL GHC.Types.Double
    | T_STRING_VAL GHC.Base.String
instance [safe] GHC.Classes.Eq [Token.Token] = Token.$fEqToken
instance [safe] GHC.Show.Show [Token.Token] = Token.$fShowToken
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

