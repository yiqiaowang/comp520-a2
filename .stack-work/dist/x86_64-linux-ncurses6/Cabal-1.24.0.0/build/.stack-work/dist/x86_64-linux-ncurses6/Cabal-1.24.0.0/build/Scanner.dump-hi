
==================== FINAL INTERFACE ====================
2017-02-05 17:35:10.216869729 UTC

interface assign2-0.1.0.0-HR9hU8cIXLf43tgzC2vdOI:Scanner 8001
  interface hash: a8b63ceeb3dab5e7d1f626f4e939f7ab
  ABI hash: cbead4c1d2e1aeaef8f063ca5a7e62b7
  export-list hash: 1da06c6494f06ab077de9fbb75f7bb5a
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 3dd67400716284ed381e099f8dc380d3
  sig of: Nothing
  used TH splices: False
  where
exports:
  Scanner.scanToken
module dependencies: Token
package dependencies: array-0.5.1.1@array-0.5.1.1 base-4.9.0.0
                      ghc-prim-0.5.0.0 integer-gmp-1.0.0.1
orphans: base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
family instance modules: base-4.9.0.0:Control.Applicative
                         base-4.9.0.0:Data.Either base-4.9.0.0:Data.Functor.Const
                         base-4.9.0.0:Data.Monoid base-4.9.0.0:Data.Type.Equality
                         base-4.9.0.0:Data.Version base-4.9.0.0:GHC.Exts
                         base-4.9.0.0:GHC.Generics base-4.9.0.0:GHC.IO.Exception
                         base-4.9.0.0:GHC.TypeLits
import  -/  array-0.5.1.1@array-0.5.1.1:Data.Array 01310623526f8acc73d1bb69e9d9530a
import  -/  array-0.5.1.1@array-0.5.1.1:Data.Array.Base cebd6cb9c4069796f65ee2b1e63ddb08
import  -/  Token e897ad80613966aa5abd8d1469d9012c
  exports: 5cfdc964f38b953af54dd1f54cfaa251
  TADD 3c1f5c9eacf21974bc4a46f29d8bc50b
  TDIV 1978eca3842d2ff07f7e68384e23ea73
  TDO a5661bba5b186a1a30c75f3c35fd8ae7
  TDONE 16d98306abcddf5f12eb3a92d2779bc6
  TELSE 9ec56b0cd974124586eafbdec441db2e
  TENDIF c668b23e46862e05a5df10e1eee0b369
  TEQUALS 6c8870af74d2e6c88b0ece182cb89c75
  TFLOAT 88b11caa2d20f7c268e0c087c8c7135f
  TIF 4cc932aa6e01b11747ec1fbf3edcc75a
  TINT 5e94fcef65df2eb5f1096da56d7f76cb
  TMULT 65cd6562b53b7fa4e429cb9c76df066d
  TPRINT 3b5ac4d9d7ae4a04778b65bddd449d83
  TREAD f68864553237e812870b49155eefc190
  TSTRING 041f3b67d7645b86a54b9d2cea899d1f
  TSUB 86a450ce759d8ddb085c343113ba55d6
  TTHEN be27cbdb2f332c3995be159b27b33294
  TVAR acc49ed1f536b035d2a39519000bab42
  TWHILE a1c0d76125b4e3006d6eda444b9e4bad
  T_CBRACE 66a644027faedfa1ae018986d925867d
  T_COLON 5a60fbb31c83dd4c37d4fb15ea0e0da2
  T_CPAREN 7f477b1521b93eb76211d36de6fa04d9
  T_DQUOTE f997a93fde99d81dd84d8668f37b3077
  T_FLOAT_VAL 5cc9bd81cc91f360e7cc2ae75bf974a0
  T_ID_VAL cfe272c30e86d1b24dbca252114b4d59
  T_INT_VAL ffbee5ac7be484fb84c770fff88bb3a6
  T_OBRACE 198d1d0fb98c6c878ea7a61d9370704d
  T_OPAREN 7de216312ab9d1945416ece0cea40cc3
  T_SCOLON a4a87f0c52efee07e52714863173e893
  T_STRING_VAL 49ec684c8967860e4e1e0122b6d96773
  Token 71e1b87689efd694bd8275cfc62f5b27
import  -/  base-4.9.0.0:Data.Bits 0645fbfabc0cdbcabea9f4570dc3c021
import  -/  base-4.9.0.0:Data.Char eb33dc25ecb52d018a0ca26590e2b50b
import  -/  base-4.9.0.0:Data.Word 34db1dae76cf3db02c16aed2b8427443
import  -/  base-4.9.0.0:GHC.Arr fbccefe7cac601823d07f61ad7e915a2
import  -/  base-4.9.0.0:GHC.Base 8ed3be81c0707b322f975a84ae1bb816
import  -/  base-4.9.0.0:GHC.Err 3bba35a16538d33d424682ce66876cdd
import  -/  base-4.9.0.0:GHC.Exts 79bfb724def0ed3fd4411241036c8cc5
import  -/  base-4.9.0.0:GHC.List 13d2451194c1c6e53b4f4f07947736dd
import  -/  base-4.9.0.0:GHC.Num 48f506a8f4ecf06285d0a0706594dcc0
import  -/  base-4.9.0.0:GHC.Real 08bf4acb5f2508f89d6fbcd57fe232e9
import  -/  base-4.9.0.0:Prelude b9bddb97799837fe67a8d00939a5b6c3
import  -/  base-4.9.0.0:Text.Read 9c1be14f7e5eac8b18bcb566c5763677
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
addDependentFile "/home/yiqiao/.stack/programs/x86_64-linux/ghc-ncurses6-8.0.1/lib/ghc-8.0.1/include/ghcversion.h"
addDependentFile "/usr/include/stdc-predef.h"
addDependentFile "src/Scanner.x"
addDependentFile "/home/yiqiao/.stack/programs/x86_64-linux/ghc-ncurses6-8.0.1/lib/ghc-8.0.1/include/ghcconfig.h"
addDependentFile "/home/yiqiao/.stack/programs/x86_64-linux/ghc-ncurses6-8.0.1/lib/ghc-8.0.1/include/ghcplatform.h"
addDependentFile "/home/yiqiao/.stack/programs/x86_64-linux/ghc-ncurses6-8.0.1/lib/ghc-8.0.1/include/ghcautoconf.h"
addDependentFile ".stack-work/dist/x86_64-linux-ncurses6/Cabal-1.24.0.0/build/autogen/cabal_macros.h"
411169e7f70e7997f0869df8b8f1db00
  $fFunctorAlexLastAcc :: GHC.Base.Functor Scanner.AlexLastAcc
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Scanner.AlexLastAcc
                  Scanner.$fFunctorAlexLastAcc_$cfmap
                  Scanner.$fFunctorAlexLastAcc_$c<$ -}
411169e7f70e7997f0869df8b8f1db00
  $fFunctorAlexLastAcc_$c<$ ::
    a -> Scanner.AlexLastAcc b -> Scanner.AlexLastAcc a
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a @ b (eta :: a) (ds :: Scanner.AlexLastAcc b) ->
                 case ds of wild {
                   Scanner.AlexNone -> Scanner.AlexNone @ a
                   Scanner.AlexLastAcc x y dt -> Scanner.AlexLastAcc @ a eta y dt
                   Scanner.AlexLastSkip x dt -> Scanner.AlexLastSkip @ a x dt }) -}
411169e7f70e7997f0869df8b8f1db00
  $fFunctorAlexLastAcc_$cfmap ::
    (a -> b) -> Scanner.AlexLastAcc a -> Scanner.AlexLastAcc b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*C1(U)><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a @ b (ds :: a -> b) (ds1 :: Scanner.AlexLastAcc a) ->
                 case ds1 of wild {
                   Scanner.AlexNone -> Scanner.AlexNone @ b
                   Scanner.AlexLastAcc x y dt -> Scanner.AlexLastAcc @ b (ds x) y dt
                   Scanner.AlexLastSkip x dt -> Scanner.AlexLastSkip @ b x dt }) -}
2cab7bb9334267405c4c10d8a7682134
  $tc'AlexA# :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2860961473286696703##
                   10616205427008766403##
                   Scanner.$trModule
                   Scanner.$tc'AlexA#1) -}
1158458fc24b5b7320eacdde8ab84579
  $tc'AlexA#1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'AlexA#"#) -}
876785ff366156dd4482e5a027827cad
  $tc'AlexAcc :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14986133982146637829##
                   11657910207615521384##
                   Scanner.$trModule
                   Scanner.$tc'AlexAcc1) -}
c68d0bfd06e622a3c1c0898bc8f40da9
  $tc'AlexAcc1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'AlexAcc"#) -}
b4c28f693fc6f7cdbfce4ddc8f88ddf1
  $tc'AlexAccNone :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6814575099961976395##
                   1731524167798986031##
                   Scanner.$trModule
                   Scanner.$tc'AlexAccNone1) -}
2095854336567a857e389f65fc5fc9b2
  $tc'AlexAccNone1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'AlexAccNone"#) -}
8461b170d938d87fd78c1b7d539be839
  $tc'AlexAccSkip :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9023972060936366467##
                   13734138523302610533##
                   Scanner.$trModule
                   Scanner.$tc'AlexAccSkip1) -}
86a64fc5ca07b211dba2882acde93ee4
  $tc'AlexAccSkip1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'AlexAccSkip"#) -}
cef691f45ff63bb58595d3305540f47b
  $tc'AlexEOF :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14788670947425510954##
                   3672184920462738418##
                   Scanner.$trModule
                   Scanner.$tc'AlexEOF1) -}
72af61881caf7259a2d236724d25e4da
  $tc'AlexEOF1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'AlexEOF"#) -}
f66c081c4b64f889f76b61cfbd6d8c83
  $tc'AlexError :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12205428726463873626##
                   18154033076550186250##
                   Scanner.$trModule
                   Scanner.$tc'AlexError1) -}
983021238b5e3be9e88160cde83641c4
  $tc'AlexError1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'AlexError"#) -}
b5b9b20f7a36bf68c2aaba6b596d8fff
  $tc'AlexLastAcc :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15345526287878186462##
                   7396500050501568959##
                   Scanner.$trModule
                   Scanner.$tc'AlexLastAcc1) -}
2103644387a35e47693d03359dc9f7f7
  $tc'AlexLastAcc1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'AlexLastAcc"#) -}
63436cae53d225c12aa0ad5e8d176843
  $tc'AlexLastSkip :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17981268431483964430##
                   15288637034398041628##
                   Scanner.$trModule
                   Scanner.$tc'AlexLastSkip1) -}
503c1095891947558be78314fb8a1b07
  $tc'AlexLastSkip1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'AlexLastSkip"#) -}
45c372d04c92587e059616bbec8e4003
  $tc'AlexNone :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7535813068461484100##
                   14112670274465799015##
                   Scanner.$trModule
                   Scanner.$tc'AlexNone1) -}
d0f377aca11750ed80c1d5b01af45739
  $tc'AlexNone1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'AlexNone"#) -}
0996f78fadd5a18c0edf966075df83ab
  $tc'AlexSkip :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4091737091397513997##
                   17125733634990769647##
                   Scanner.$trModule
                   Scanner.$tc'AlexSkip1) -}
c9e8a2e72ffb56950d0ca0b9de7d1fea
  $tc'AlexSkip1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'AlexSkip"#) -}
64970c6a194df606cdf119b3f794c7dc
  $tc'AlexToken :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1667922509740732561##
                   13965005039992207140##
                   Scanner.$trModule
                   Scanner.$tc'AlexToken1) -}
5e208448d0898ead6750164058b7a2f7
  $tc'AlexToken1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'AlexToken"#) -}
77f5da568ba8fcf772424093ae9b5cd7
  $tcAlexAcc :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9552040868988827111##
                   13309654646605418603##
                   Scanner.$trModule
                   Scanner.$tcAlexAcc1) -}
909352e180a202310f41fcd302fcffda
  $tcAlexAcc1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "AlexAcc"#) -}
4e2f719e3c2ce8447d269cb49eabc821
  $tcAlexAddr :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13678529784628805973##
                   11781265464189969725##
                   Scanner.$trModule
                   Scanner.$tcAlexAddr1) -}
820bea44c1f4c43ce1c8876f2db6f5fb
  $tcAlexAddr1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "AlexAddr"#) -}
273b23da5054ae81dea8bc6d98646d34
  $tcAlexLastAcc :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2910879818834966576##
                   14491181918797380207##
                   Scanner.$trModule
                   Scanner.$tcAlexLastAcc1) -}
03bfa26ac5c29942ec4f44f301da9737
  $tcAlexLastAcc1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "AlexLastAcc"#) -}
1038c9aa121463dd9651d5e2c16dd83e
  $tcAlexReturn :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   18388107172209731868##
                   3588660149814166894##
                   Scanner.$trModule
                   Scanner.$tcAlexReturn1) -}
d868780b2776b45e4d255321166ca230
  $tcAlexReturn1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "AlexReturn"#) -}
313def48115482afd39397a33b2cd629
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Scanner.$trModule2
                   Scanner.$trModule1) -}
5b95cd2db6d5e337f7acde9206dcdf35
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Scanner"#) -}
d2946582d49b876e82a665357b72dc9e
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "assign2-0.1.0.0-HR9hU8cIXLf43tgzC2vdOI"#) -}
2efd9681c903fc72e0e0dec9edb8bb41
  $wgo ::
    GHC.Types.Char
    -> [Scanner.Byte] -> GHC.Base.String -> [Token.Token]
  {- Arity: 3, Strictness: <L,U><S,U><L,U>, Inline: [0] -}
2cfb2ac05fdd0d09252cbf05ce0bfe6f
  type role AlexAcc representational phantom
  data AlexAcc a user = AlexAccNone | AlexAcc a | AlexAccSkip
a1ce020423974ddb7c95ab01a2f6f7fe
  data AlexAddr = AlexA# GHC.Prim.Addr#
075cebad7caf976f9543c48fefcadd4d
  type AlexInput = (GHC.Types.Char, [Scanner.Byte], GHC.Base.String)
411169e7f70e7997f0869df8b8f1db00
  data AlexLastAcc a
    = AlexNone
    | AlexLastAcc a !Scanner.AlexInput {-# UNPACK #-}GHC.Types.Int
    | AlexLastSkip !Scanner.AlexInput {-# UNPACK #-}GHC.Types.Int
1a4679961e4ab2b70abea513a269748e
  data AlexReturn a
    = AlexEOF
    | AlexError !Scanner.AlexInput
    | AlexSkip !Scanner.AlexInput {-# UNPACK #-}GHC.Types.Int
    | AlexToken !Scanner.AlexInput {-# UNPACK #-}GHC.Types.Int a
bde329e76bad3a5dbf73fe237c4dd729
  type Byte = GHC.Word.Word8
2e25bb1ecbf4bff5ea0f011c26e54be3
  scanToken :: GHC.Base.String -> [Token.Token]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: [GHC.Types.Char]) ->
                 case ds of wild {
                   [] -> GHC.Types.[] @ Token.Token
                   : ipv ipv1
                   -> Scanner.scanToken_go
                        (Scanner.scanToken1, GHC.Types.[] @ Scanner.Byte, wild) }) -}
fae66f1d145c78f667f0e52daf4c384d
  scanToken1 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# '\n'#) -}
e1eced8be3f5a0047b96f44546969f3a
  scanToken_go :: Scanner.AlexInput -> [Token.Token]
  {- Arity: 1, Strictness: <S(LSL),1*U(U,U,U)>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Scanner.AlexInput) ->
                 case w of ww { (,,) ww1 ww2 ww3 -> Scanner.$wgo ww1 ww2 ww3 }) -}
instance GHC.Base.Functor [Scanner.AlexLastAcc]
  = Scanner.$fFunctorAlexLastAcc
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

